{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Compile", // lanuch.json中的preLaunchTask对应
            "command": "g++", // 指定编译器
            "args": [             // 编译器的命令行参数
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe",
                // "-g",    // 生成调试信息
                // "-Wall", // 显示所有警告信息
                // "-static-libgcc",    // 使用静态库
                // "-fcolor-diagnostics",   //彩色信息 
                // "--target=x86_64-w64-mingw", // 默认target为msvc，不加这一条就会找不到头文件
                // "-std=c++17",
                "-lglut32",
                "-lglu32",
                "-lopengl32"
                // "-lglew32"
            ],
            "type": "shell",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",  // 在“终端”中显示编译信息的策略，可以为always，silent，never
                "focus": false, // 设为true后可以使执行task时焦点聚集在终端，但对编译c和c++来说，设为true没有意义
                "panel": "shared" // 不同的文件的编译信息共享一个终端面板
            },
            "options": {
                "shell": {
                    "executable": "powershell",
                    "args": ["/C"]
                }
            }
        },
        {
            "type": "cppbuild",
            "label": "C/C++: g++.exe build active file",
            "command": "D:\\DevEnv\\mingw64\\bin\\g++.exe",
            "args": [
                // "-fdiagnostics-color=always",
                "-g",
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "options": {
                "cwd": "D:\\DevEnv\\mingw64\\bin"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true // 设为false可做到一个tasks.json配置多个编译指令
            },
            "detail": "Task generated by Debugger."
        }
    ]
}